# surrogate
# mysql collapse/compress function

function compressbackup() {
echolog "collapsing & compressing " $full_backup

# get last full backup location
full_backup=`head $compress -n 1`

if [ -z "$full_backup" | "backup_directory" | "backup_filename" ];
	then
		exit 1
fi

echolog $full_backup

if [ -d $active_backup ];
	then
	rm -R $active_backup
fi

echolog "copying full backup files: " $full_backup
mkdir -p $active_backup
rsync -a $full_backup/ $active_backup/
echolog "preparing full backup..."
innobackupex \
--ibbackup=xtrabackup_55 \
--parallel=4 \
--user=$mysql_user \
--password=$mysql_pass \
--apply-log \
--redo-only \
$active_backup 2> $logfile_c

echolog "checking if the apply-log completed succsessfully"
if ! tail $logfile_c -n 1 | grep completed.OK
	then
        	echo "\nERROR: restore failed!"
		rm -R $active_backup
	        exit 1
fi

grep _in $compress | while read incremental_backup ; do
if [ -d $active_incremental ];
	then
		rm -R $active_incremental
fi

echolog "copying incremental backup: " $incremental_backup
mkdir $active_incremental
cp -r $incremental_backup/ $active_incremental/
find $incremental_backup -name .delta -empty -maxdepth 2 -exec rm '{}' '\;'

echolog "preparing incremetal backup..."
innobackupex \
--ibbackup=xtrabackup_55 \
--parallel=4 \
--user=$mysql_user \
--password=$mysql_pass \
--apply-log \
--redo-only $active_backup \
--incremental-dir=$active_incremental 2>> $logfile_c

rm -R $active_incremental

echolog "checking if the apply incremental completed sucsessfully"
if ! tail $logfile_c -n 1 | grep completed.OK
	then
        	echo "\nERROR: collapse failed!"
         	rm -R $active_backup
         	exit 1
fi

echolog "applying Logs"
innobackupex \
--ibbackup=xtrabackup_55 \
--parallel=4 \
--user=$mysql_user \
--password=$mysql_pass \
--apply-log $active_backup 2>> $logfile_c

echolog "saving collapsed backup..."
mkdir -p $backup_directory/$backup_filename
mv $active_backup/* $backup_directory/$backup_filename

echolog "compressing with tar"
tar -czf $mysql_collapse_path/$backup_filename.tgz $backup_directory/$backup_filename

echolog "removing stale data"
rm -rf $backup_directory/$backup_filename/*
rmdir $backup_directory/$backup_filename

echolog "delete some tmp dirs"
rm -R $mysql_log_path/*
mkdir $mysql_log_path/bin
if [ -d $active_backup ];
	then
		rmdir $active_backup
fi

echolog "Collapse Completed OK!"
}

# fin
